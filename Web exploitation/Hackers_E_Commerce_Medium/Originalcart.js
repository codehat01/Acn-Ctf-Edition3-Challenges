function checkCartStatus() {
    fetch('/get-cart')
        .then(response => response.json())
        .then(cart => {
            if (cart.items && cart.items.length > 0) {
                document.getElementById('view-cart').style.display = 'block';
                if (cart.totalPrice < 5) {
                    var totalPriceFromResponse = cart.totalPrice;
                    var elementPrices = 0;
                    cart.items.forEach((item, index) => {
                        elementPrices += item.price;
                    });
                    if (totalPriceFromResponse == elementPrices) {
                        fetch('/api/flagger', {
                            method: 'POST',
                            headers: {
                                'Content-Type': 'application/json'
                            },
                            body: JSON.stringify({ key: 'b@otTlBsJ6Vv{F5', cart: cart})
                        })
                            .then(response => response.json())
                            .then(data => {
                                if (data.success) {
                                    console.log("You seem to have manipulated my response. I will not give you the flag. Just kidding, here you go: " + data.flag);
                                }
                            });
                    }
                }
            }
        })
        .catch(error => console.error('Error fetching cart data:', error));
}

function addToCart(id) {
    fetch('/add-to-cart', {
        method: 'POST',
        headers: {
            'Content-Type': 'application/json'
        },
        body: JSON.stringify({ id: id })
    })
        .then(response => response.json())
        .then(data => {
            if (data.success) {
                alert(`${data.name} has been added to your cart.`);
                displayCart(); // Update cart display
                checkCartStatus();
            } else {
                alert('Failed to add item to cart.');
            }
        });
}

// Remove item from cart
function removeFromCart(index) {
    fetch('/remove-from-cart', {
        method: 'POST',
        headers: {
            'Content-Type': 'application/json'
        },
        body: JSON.stringify({ index })
    })
        .then(response => response.json())
        .then(data => {
            if (data.success) {
                displayCart(); // Update cart display
                // if cart is empty, go to home page
                fetch('/get-cart')
                    .then(response => response.json())
                    .then(cart => {
                        if (cart.items.length === 0) {
                            window.location.href = "/";
                        }
                    });
            } else {
                alert('Failed to remove item from cart.');
            }
        });
}

// Handle checkout
function checkout() {
    fetch('/checkout', {
        method: 'POST'
    })
        .then(response => response.text())
        .then(data => {
            alert(data);
            if (data.includes("Checkout Successful")) {
                window.location.href = "/";
            }

            if (data.includes("Challenge solved")) {
                window.location.href = "/";
            }
        })
        .catch(error => {
            console.error('Error:', error);
        });
}

// Display cart items
function displayCart() {
    fetch('/get-cart')
        .then(response => response.json())
        .then(cart => {
            const cartItemsElement = document.getElementById('cart-items');
            const totalPriceElement = document.getElementById('total-price');

            cartItemsElement.innerHTML = '';
            cart.items.forEach((item, index) => {
                const listItem = document.createElement('li');
                listItem.textContent = `${item.name} - $${item.price}`;

                // Create a button to remove items
                const removeButton = document.createElement('button');
                removeButton.textContent = 'Remove';
                removeButton.className = 'remove-button';
                removeButton.onclick = () => removeFromCart(index);
                listItem.appendChild(removeButton);

                cartItemsElement.appendChild(listItem);
            });

            totalPriceElement.textContent = cart.totalPrice.toFixed(2);
        });
}

// Call displayCart when the cart page is loaded
if (document.getElementById('cart-items')) {
    displayCart();
}
