const express = require('express');
const router = express.Router();
const bodyParser = require('body-parser');


// Sample products
const products = [
    { id: 1, name: 'Hacker Sticker', image: "/images/hacker_sticker.jpg", price: 9, description: "It's very bad not to have a sticker on your laptop. Get this sticker and show off your hacking skills." },
    { id: 2, name: 'WiFi Extender', image: "/images/extender.jpg", price: 50, description: "Extend your WiFi range with this powerful WiFi extender. It's a must-have for every hacker." },
    { id: 3, name: 'Wire Organizer', image: "/images/organizer.jpg", price: 100, description: "Keep your wires organized with this wire organizer. Not having your wires organized will make you slower." },
    { id: 4, name: 'USB Rubber Ducky', image: "/images/ducky.jpg", price: 40, description: "Automate your tasks with this USB Rubber Ducky. Seems small but does big damage." },
    { id: 5, name: 'Hacker Keyboard', image: "/images/keyboard.jpg", price: 150, description: "Get this hacker keyboard and type faster than ever. Things need to happen fast and they require fast keystrokes." },
    { id: 6, name: 'LAN Capturer', image: "/images/ethernet_capture.jpg", price: 120, description: "No one would expect an attack using innocent LAN ports" },
];

function getProductById(id) {
    return products.find(p => p.id === id);
}

// Initialize an empty cart in session if it does not exist
function initializeCart(req) {
    if (!req.session.cart) {
        req.session.cart = { items: [], totalPrice: 0 };
    }
}

// Home route
router.get('/', (req, res) => {
    res.render('index', { products });
});

// Product route
router.get('/product/:id', (req, res) => {
    const productId = parseInt(req.params.id, 10);
    const product = products.find(p => p.id === productId);
    if (product) {
        res.render('product', { product }); // Fixed view name to 'product'
    } else {
        res.status(404).render('404', { productNotFound: true });
    }
});

// Cart route
router.get('/cart', (req, res) => {
    initializeCart(req);
    const cart = req.session.cart;

    if (!cart.items || cart.items.length === 0) {
        return res.redirect('/');
    }

    res.render('cart');
});

// Add to cart route
router.post('/add-to-cart', (req, res) => {
    initializeCart(req);
    const { id } = req.body;
    const cart = req.session.cart;

    const product = getProductById(parseInt(id, 10));

    cart.items.push({ id, name: product.name, price: product.price });
    cart.totalPrice += product.price;

    res.json({ success: true, name: product.name });
});

// Remove from cart route
router.post('/remove-from-cart', (req, res) => {
    initializeCart(req);
    const { index } = req.body;
    const cart = req.session.cart;

    if (index >= 0 && index < cart.items.length) {
        const removedItem = cart.items.splice(index, 1)[0];
        cart.totalPrice -= removedItem.price;
        res.json({ success: true });
    } else {
        res.json({ success: false });
    }
});

// Get cart data route
router.get('/get-cart', (req, res) => {
    initializeCart(req);
    res.json(req.session.cart);
});

// Checkout route
router.post('/checkout', (req, res) => {
    initializeCart(req);
    const cart = req.session.cart;

    // Check if the cart has items and the total price is valid
    if (cart.items.length > 0 && cart.totalPrice > 0) {
        if (cart.totalPrice < 5) {
            req.session.cart = { items: [], totalPrice: 0 };
            return res.send(`Challenge solved: ${process.env.FLAG}`);
        } else {
            req.session.cart = { items: [], totalPrice: 0 };
            return res.send('Checkout Successful: Your order has been placed');
        }
    } else {
        return res.send('Checkout failed: Cart is empty or invalid');
    }
});

router.get("/admin", (req, res) => {
    res.render('login', { loginFailed: false });
});

router.post("/admin", (req, res) => {
    res.render('login', { loginFailed: true });
});

router.post("/api/flagger", (req, res) => {
    const cart = req.session.cart;
    if (cart && req.body.key == "b@otTlBsJ6Vv{F5") {
        if (req.body.cart.totalPrice < 5) {
            res.json({ success: true, flag: process.env.FLAG });
        } else {
            res.json({ success: false });
        }
    } else {
        res.json({ success: false });
    }
});

router.get("*", (req, res) => {
    res.status(404).render('404', { productNotFound: false });
});


module.exports = router;
