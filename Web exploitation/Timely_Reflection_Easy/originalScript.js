// Preserve the original alert function
window.originalAlert = window.alert;

// Override the native alert function
window.alert = async function (message) {
    // Perform the POST request to the API route to get the flag
    const flag = await fetchFlagFromServer();

    // Display the flag in the HTML element with id 'greeting'
    document.getElementById('greeting').innerHTML = flag;

    // Call the original alert function
    window.originalAlert("One more click !!!");
};

// Function to fetch the flag from the server
async function fetchFlagFromServer() {
    try {
        // Sending a POST request to the API route
        const response = await fetch('/api/getFlag', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json',
            },
            body: JSON.stringify({ key: 'Ei1QiKRVfxFD' }), // Replace with your actual request body
        });

        // Checking if the response is successful
        if (!response.ok) {
            throw new Error('Network response was not ok');
        }

        // Assuming the server sends back the flag as a base64 encoded string
        const data = await response.json();
        const encodedFlag = data.flag;
        
        // Decode the flag
        return atob(encodedFlag);
    } catch (error) {
        console.error('Failed to fetch the flag:', error);
        return 'Error fetching flag';
    }
}

// Function to get URL parameter
function getParameterByName(name) {
    const url = window.location.href;
    const nameRegex = name.replace(/[\[\]]/g, "\\$&");
    const regex = new RegExp("[?&]" + name + "(=([^&#]*)|&|#|$)");
    const results = regex.exec(url);
    return results ? decodeURIComponent(results[2].replace(/\+/g, " ")) : null;
}

// Set the greeting
const userName = getParameterByName('name');
if (userName) {
    // This line introduces the reflected XSS vulnerability
    document.getElementById('greeting').innerHTML = `Hello, ${userName}!!`;
}

// Function to update the clock
function updateClock() {
    const now = new Date();
    const timeString = now.toLocaleTimeString();
    document.getElementById('clock').textContent = timeString;
}

// Update clock every second
setInterval(updateClock, 1000);

// Initial clock display
updateClock();
